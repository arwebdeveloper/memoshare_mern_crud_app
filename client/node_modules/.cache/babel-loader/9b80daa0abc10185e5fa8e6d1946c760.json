{"ast":null,"code":"import * as api from '../../api';\nimport { COMMENT, CREATE, DELETE, END_LOADING, FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, LIKE, START_LOADING, UPDATE } from '../constants'; //action create => function that return an action:\n\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n    console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPosts = (post, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    history.push(`/posts/${data._id}`);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const commentPost = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(value, id);\n    console.log('data', data);\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/macbookair/Desktop/memory-mernStack-app/client/src/redux_store/actions/posts.js"],"names":["api","COMMENT","CREATE","DELETE","END_LOADING","FETCH_ALL","FETCH_BY_SEARCH","FETCH_POST","LIKE","START_LOADING","UPDATE","getPost","id","dispatch","type","data","fetchPost","payload","error","console","log","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPosts","post","history","createPost","push","_id","updatePost","deletePost","likePost","commentPost","value","comment","comments"],"mappings":"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","sourcesContent":["import * as api from '../../api';\nimport { COMMENT, CREATE, DELETE, END_LOADING, FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, LIKE, START_LOADING, UPDATE } from '../constants';\n\n//action create => function that return an action:\n\nexport const getPost =(id)=> async(dispatch)=>{\n    try {\n        dispatch({type:START_LOADING})\n        const {data} = await api.fetchPost(id);\n        dispatch({type: FETCH_POST, payload: data});\n        dispatch({type: END_LOADING})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getPosts =(page)=> async(dispatch)=>{\n    try {\n        dispatch({type:START_LOADING})\n        const {data} = await api.fetchPosts(page);\n        dispatch({type: FETCH_ALL, payload: data});\n        dispatch({type: END_LOADING})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const getPostsBySearch =(searchQuery)=> async(dispatch)=>{\n    try {\n        dispatch({type:START_LOADING});\n        const {data : {data}} = await api.fetchPostsBySearch(searchQuery);\n        dispatch({type: FETCH_BY_SEARCH, payload: data});\n        dispatch({type: END_LOADING})\n        console.log(data);\n    } catch (error) {\n        console.log(error )\n    }\n}\n\nexport const createPosts =(post,history)=> async(dispatch)=>{\n    try {\n        dispatch({type:START_LOADING});\n        const {data} = await api.createPost(post);\n        history.push(`/posts/${data._id}`);\n        dispatch({type: CREATE, payload: data});\n        dispatch({type: END_LOADING})\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const updatePost = (id,post)=> async (dispatch)=>{\n    try{\n        const {data} = await api.updatePost(id,post);\n\n        dispatch({type: UPDATE, payload: data})\n    }catch(error){\n        console.log(error)\n    }\n}\n\nexport const deletePost =(id)=> async (dispatch)=>{\n    try{\n        await api.deletePost(id);\n\n        dispatch({type: DELETE, payload: id});\n    }catch(error){\n        console.log(error)\n    }\n}\n\nexport const likePost =(id)=> async (dispatch)=>{\n    try {\n        const {data} = await api.likePost(id);\n\n        dispatch({type: LIKE, payload: data})\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const commentPost =(value,id) => async (dispatch)=>{\n    try{\n        const {data} = await api.comment(value,id);\n        console.log('data',data); \n        dispatch({type: COMMENT , payload: data});\n        return data.comments;\n    }catch(error){\n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}