{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: \"http://localhost:5000\"\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem(\"profile\")) {\n    req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem(\"profile\")).token}`;\n  }\n\n  return req;\n});\nexport const fetchPost = id => API.get(`/posts/${id}`);\nexport const fetchPosts = page => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = searchQuery => {\n  return API.post(`/posts/search?searchQuery=${searchQuery.search || \"none\"}&tags=${searchQuery.tags}`);\n};\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, {\n  value\n});\nexport const createPost = newPost => API.post(\"/posts\", newPost, {\n  token: JSON.parse(localStorage.getItem(\"profile\")).result.googleId\n});\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nexport const likePost = id => API.patch(`/posts/${id}/likePost`, {\n  token: JSON.parse(localStorage.getItem(\"profile\")).result.googleId\n});\nexport const signIn = formData => API.post(\"/user/signIn\", formData);\nexport const signUp = formData => API.post(\"/user/signUp\", formData);","map":{"version":3,"sources":["/Users/macbookair/Desktop/memory-mernStack-app/client/src/api/index.js"],"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","fetchPost","id","get","fetchPosts","page","fetchPostsBySearch","searchQuery","post","search","tags","comment","value","createPost","newPost","result","googleId","updatePost","updatedPost","patch","deletePost","delete","likePost","signIn","formData","signUp"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAZ;AAEAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;AACpC,MAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AACnCF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAC3BC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAC7C,EAFD;AAGD;;AACD,SAAOP,GAAP;AACD,CAPD;AASA,OAAO,MAAMQ,SAAS,GAAIC,EAAD,IAAQf,GAAG,CAACgB,GAAJ,CAAS,UAASD,EAAG,EAArB,CAA1B;AACP,OAAO,MAAME,UAAU,GAAIC,IAAD,IAAUlB,GAAG,CAACgB,GAAJ,CAAS,eAAcE,IAAK,EAA5B,CAA7B;AACP,OAAO,MAAMC,kBAAkB,GAAIC,WAAD,IAAiB;AAC/C,SAAOpB,GAAG,CAACqB,IAAJ,CACN,6BAA4BD,WAAW,CAACE,MAAZ,IAAsB,MAAO,SACxDF,WAAW,CAACG,IACb,EAHM,CAAP;AAKH,CANM;AAOP,OAAO,MAAMC,OAAO,GAAE,CAACC,KAAD,EAAOV,EAAP,KAAaf,GAAG,CAACqB,IAAJ,CAAU,UAASN,EAAG,cAAtB,EAAoC;AAACU,EAAAA;AAAD,CAApC,CAA5B;AACP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IACxB3B,GAAG,CAACqB,IAAJ,CAAS,QAAT,EAAmBM,OAAnB,EAA4B;AAC1Bd,EAAAA,KAAK,EAAEF,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CoB,MAA5C,CAAmDC;AADhC,CAA5B,CADK;AAIP,OAAO,MAAMC,UAAU,GAAG,CAACf,EAAD,EAAKgB,WAAL,KACxB/B,GAAG,CAACgC,KAAJ,CAAW,UAASjB,EAAG,EAAvB,EAA0BgB,WAA1B,CADK;AAEP,OAAO,MAAME,UAAU,GAAIlB,EAAD,IAAQf,GAAG,CAACkC,MAAJ,CAAY,UAASnB,EAAG,EAAxB,CAA3B;AACP,OAAO,MAAMoB,QAAQ,GAAIpB,EAAD,IACtBf,GAAG,CAACgC,KAAJ,CAAW,UAASjB,EAAG,WAAvB,EAAmC;AACjCF,EAAAA,KAAK,EAAEF,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CoB,MAA5C,CAAmDC;AADzB,CAAnC,CADK;AAKP,OAAO,MAAMO,MAAM,GAAIC,QAAD,IAAcrC,GAAG,CAACqB,IAAJ,CAAS,cAAT,EAAyBgB,QAAzB,CAA7B;AACP,OAAO,MAAMC,MAAM,GAAID,QAAD,IAAcrC,GAAG,CAACqB,IAAJ,CAAS,cAAT,EAAyBgB,QAAzB,CAA7B","sourcesContent":["import axios from \"axios\";\n\nconst API = axios.create({ baseURL: \"http://localhost:5000\" });\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem(\"profile\")) {\n    req.headers.authorization = `Bearer ${\n      JSON.parse(localStorage.getItem(\"profile\")).token\n    }`;\n  }\n  return req;\n});\n\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = (searchQuery) => {\n    return API.post(\n    `/posts/search?searchQuery=${searchQuery.search || \"none\"}&tags=${\n      searchQuery.tags\n    }`\n  );\n};\nexport const comment =(value,id)=> API.post(`/posts/${id}/commentPost`,{value})\nexport const createPost = (newPost) =>\n  API.post(\"/posts\", newPost, {\n    token: JSON.parse(localStorage.getItem(\"profile\")).result.googleId,\n  });\nexport const updatePost = (id, updatedPost) =>\n  API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\nexport const likePost = (id) =>\n  API.patch(`/posts/${id}/likePost`, {\n    token: JSON.parse(localStorage.getItem(\"profile\")).result.googleId,\n  });\n\nexport const signIn = (formData) => API.post(\"/user/signIn\", formData);\nexport const signUp = (formData) => API.post(\"/user/signUp\", formData);\n"]},"metadata":{},"sourceType":"module"}