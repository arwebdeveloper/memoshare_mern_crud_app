{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/memory-mernStack-app/client/src/components/Form/Form.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, TextField, Paper, Button } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useStyles from \"./style\";\nimport { createPosts, updatePost } from \"../../redux_store/actions/posts\";\n\nconst Form = _ref => {\n  var _user$result3;\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n  const post = useSelector(state => currentId ? state.posts.find(post => post._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (post) {\n      setPostData(post);\n    }\n  }, [post]);\n\n  const handleChange = (e, prop) => {\n    if (prop === \"tags\") {\n      setPostData({ ...postData,\n        [prop]: e.target.value.split(',')\n      });\n    } else {\n      setPostData({ ...postData,\n        [prop]: e.target.value\n      });\n    }\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\"\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('currentId', currentId);\n    console.log('pstData', postData);\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPosts({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n    }\n\n    clear();\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Please Sign In to create your own memories and likes others memories\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: `${classes.root} ${classes.form}`,\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, currentId ? \"Editing\" : \"Creating\", \" a Memory\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    value: postData.title,\n    onChange: e => handleChange(e, \"title\"),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    value: postData.message,\n    onChange: e => handleChange(e, \"message\"),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    value: postData.tags,\n    onChange: e => handleChange(e, \"tags\"),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref2 => {\n      let {\n        base64\n      } = _ref2;\n      return setPostData({ ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/macbookair/Desktop/memory-mernStack-app/client/src/components/Form/Form.js"],"names":["React","useEffect","useState","Typography","TextField","Paper","Button","FileBase","useDispatch","useSelector","useStyles","createPosts","updatePost","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","handleChange","e","prop","target","value","split","clear","handleSubmit","preventDefault","console","log","name","result","paper","root","form","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Typography, TextField, Paper, Button } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useStyles from \"./style\";\nimport { createPosts, updatePost } from \"../../redux_store/actions/posts\";\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((post) => post._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  useEffect(() => {\n    if (post) {\n      setPostData(post);\n    }\n  }, [post]);\n\n  const handleChange = (e, prop) => {\n    if(prop===\"tags\"){\n      setPostData({ ...postData, [prop]: e.target.value.split(',') });  \n    }else{\n      setPostData({ ...postData, [prop]: e.target.value });\n    }\n\n  };\n  \n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('currentId',currentId);\n    console.log('pstData', postData);\n    if (currentId===0) {\n      dispatch(createPosts({...postData,name: user?.result?.name}));\n    } else {\n      dispatch(updatePost(currentId,{...postData,name: user?.result?.name}));\n    }\n    clear();\n  };\n\n  if(!user?.result?.name){\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create your own memories and likes others memories \n        </Typography>\n      </Paper>\n    )\n  }\n  return (\n    <Paper className={classes.paper}>\n      <form\n        className={`${classes.root} ${classes.form}`}\n        autoComplete=\"off\"\n        noValidate\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? \"Editing\" : \"Creating\"} a Memory\n        </Typography>\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          value={postData.title}\n          onChange={(e) => handleChange(e, \"title\")}\n          fullWidth\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          value={postData.message}\n          onChange={(e) => handleChange(e, \"message\")}\n          fullWidth\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags\"\n          value={postData.tags}\n          onChange={(e) => handleChange(e, \"tags\")}\n          fullWidth\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}