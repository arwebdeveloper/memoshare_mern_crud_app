{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/memory-mernStack-app/client/src/components/Auth/Auth.js\";\nimport React, { useState } from 'react';\nimport { GoogleLogin } from \"react-google-login\";\nimport { Avatar, Button, Paper, Grid, Typography, Container } from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Icon from \"./icon\";\nimport useStyles from './style';\nimport Input from './Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst Auth = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [fromData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSignInSignOut = () => setIsSignUp(prevIsSignUp => !prevIsSignUp);\n\n  const handleChange = () => {\n    console.log('changing...');\n  };\n\n  const googleSuccess = async res => {\n    console.log('res', res);\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: \"AUTH\",\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log('Google login is not successfull, please try again later!');\n  };\n\n  const handleSubmit = () => {\n    console.log('handleSubmit');\n  };\n\n  console.log('auth', auth);\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, isSignUp ? \"Sign Up\" : \"Sign In\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, isSignUp && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    half: true,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? \"text\" : \"password\",\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), isSignUp && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Confirm Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 34\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, isSignUp ? \"Sign Up\" : \"Sign In\"), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 36\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSignInSignOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, isSignUp ? \"Already have an acount? Sing In!\" : \"Don't have an account ? Sign Up!\"))))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/macbookair/Desktop/memory-mernStack-app/client/src/components/Auth/Auth.js"],"names":["React","useState","GoogleLogin","Avatar","Button","Paper","Grid","Typography","Container","LockOutlinedIcon","Icon","useStyles","Input","useDispatch","useSelector","useHistory","Auth","showPassword","setShowPassword","isSignUp","setIsSignUp","fromData","setFormData","firstName","lastName","email","password","confirmPassword","dispatch","auth","state","classes","history","handleShowPassword","prevShowPassword","handleSignInSignOut","prevIsSignUp","handleChange","console","log","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","googleFailure","handleSubmit","paper","avatar","form","submit","process","env","REACT_APP_GOOGLE_CLIENT_ID","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {GoogleLogin} from \"react-google-login\";\nimport {Avatar,Button,Paper,Grid,Typography,Container} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Icon from \"./icon\"\n\nimport useStyles from './style';\nimport Input from './Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nconst Auth = () => {\n    const [showPassword, setShowPassword] = useState(false);\n    const [isSignUp, setIsSignUp] = useState(false);\n    const [fromData, setFormData] = useState({\n        firstName:\"\",\n        lastName:\"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    })\n    const dispatch = useDispatch();\n    const auth = useSelector(state=>state)\n    const classes  = useStyles();\n    const history = useHistory();\n\n    const handleShowPassword =()=> setShowPassword((prevShowPassword) => !prevShowPassword);\n    const handleSignInSignOut =()=> setIsSignUp((prevIsSignUp)=>!prevIsSignUp);\n    const handleChange =()=>{\n        console.log('changing...')\n    }\n    const googleSuccess = async (res)=>{\n        console.log('res',res)\n        const result = res?.profileObj;\n        const token = res?.tokenId;\n\n        try {\n            dispatch({type: \"AUTH\", data: {result, token}})\n            history.push('/')\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const googleFailure=()=>{\n        console.log('Google login is not successfull, please try again later!')\n    }\n    const handleSubmit=()=>{\n        console.log('handleSubmit')\n    }\n    console.log('auth',auth);\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n        <Paper className={classes.paper}>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon/>\n            </Avatar>\n            <Typography>{isSignUp ? \"Sign Up\" : \"Sign In\"}</Typography>\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                    {isSignUp && (\n                        <>\n                         <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} half autoFocus/>\n                         <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half/>\n                        </>\n                    )}\n                    <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n                    <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword? \"text\": \"password\"} handleShowPassword={handleShowPassword}/>\n                    {isSignUp && <Input name=\"confirmPassword\" label=\"Confirm Password\" handleChange={handleChange} type=\"password\"/>}\n                </Grid>\n                    <Button type='submit' variant='contained' fullWidth color='primary' className={classes.submit}>\n                        {isSignUp? \"Sign Up\": \"Sign In\"}\n                    </Button>\n                    <GoogleLogin\n                    clientId= {process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                    render={(renderProps)=>(\n                        <Button\n                        className={classes.googleButton}\n                        color=\"primary\"\n                        fullWidth\n                        onClick={renderProps.onClick}\n                        disabled={renderProps.disabled}\n                        startIcon={<Icon/>}\n                        variant=\"contained\"\n                        >\n                            Google Sign In\n                        </Button>\n                    )}\n                    onSuccess={googleSuccess}\n                    onFailure={googleFailure}\n                    cookiePolicy=\"single_host_origin\"\n                    />\n                    <Grid container justifyContent='flex-end'>\n                        <Grid item>\n                            <Button onClick={handleSignInSignOut}>\n                               {isSignUp? \"Already have an acount? Sing In!\" : \"Don't have an account ? Sign Up!\"} \n                            </Button>\n                        </Grid>\n                    </Grid>\n            </form>\n        </Paper>\n    </Container>\n  )\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}