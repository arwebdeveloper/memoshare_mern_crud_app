{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/memory-mernStack-app/client/src/components/PostDetails/PostDetails.js\";\nimport React, { useEffect } from \"react\";\nimport { Paper, Typography, CircularProgress, Divider } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport useStyles from \"./style\";\nimport { getPost, getPostsBySearch } from \"../../redux_store/actions/posts\";\n\nconst PostDetails = () => {\n  const {\n    post,\n    isLoading,\n    posts\n  } = useSelector(state => state.posts);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]); // useEffect(()=>{\n  //   console.log('????????',post)\n  //   console.log(\"?//////\",post?.tags)\n  //   if(post){\n  //     dispatch(getPostsBySearch({search: 'none', tags: post?.tags.join(',')}));\n  //   }\n  // },[post])\n\n  if (!post) return null;\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      elevation: 6,\n      className: classes.loadingPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: \"7em\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const recommendedPosts = posts.filter(_ref => {\n    let {\n      _id\n    } = _ref;\n    return _id !== post._id;\n  });\n  console.log('Posts', posts);\n  console.log('Post', post);\n  console.log('recommendedPost', recommendedPosts);\n\n  const openPost = _id => history.push(`/posts/${_id}`);\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: \"20px\",\n      borderRadius: \"15px\"\n    },\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, post === null || post === void 0 ? void 0 : post.title), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    color: \"textSecondary\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, post.tags.map(tag => `#${tag} `)), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, post.message), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Created by: \", post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, moment(post.createdAt).fromNow()), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: \"20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Realtime Chat - coming soon!\")), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: \"20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Comments - coming soon!\")), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: \"20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.imageSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.media,\n    src: post.selectedFile || \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\",\n    alt: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))), recommendedPosts.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"You might also like:\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.recommendedPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, recommendedPosts.map(_ref2 => {\n    let {\n      title,\n      message,\n      name,\n      likes,\n      selectedFile,\n      _id\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '20px',\n        cursor: \"pointer\"\n      },\n      onClick: () => openPost(_id),\n      key: _id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, name), /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, message), /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Likes: \", likes.length), /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"img\", {\n      src: selectedFile,\n      width: \"200px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }));\n  }))) : null);\n};\n\nexport default PostDetails;","map":{"version":3,"sources":["/Users/macbookair/Desktop/memory-mernStack-app/client/src/components/PostDetails/PostDetails.js"],"names":["React","useEffect","Paper","Typography","CircularProgress","Divider","useDispatch","useSelector","moment","useHistory","useParams","useStyles","getPost","getPostsBySearch","PostDetails","post","isLoading","posts","state","classes","dispatch","id","history","loadingPaper","recommendedPosts","filter","_id","console","log","openPost","push","padding","borderRadius","card","section","title","tags","map","tag","message","name","createdAt","fromNow","margin","imageSection","media","selectedFile","length","likes","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  Paper,\n  Typography,\n  CircularProgress,\n  Divider,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport useStyles from \"./style\";\nimport { getPost, getPostsBySearch } from \"../../redux_store/actions/posts\";\nconst PostDetails = () => {\n  const { post, isLoading, posts } = useSelector((state) => state.posts);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const history = useHistory();\n\n\n  useEffect(()=>{\n    dispatch(getPost(id));\n  },[id])\n  \n  // useEffect(()=>{\n  //   console.log('????????',post)\n  //   console.log(\"?//////\",post?.tags)\n  //   if(post){\n  //     dispatch(getPostsBySearch({search: 'none', tags: post?.tags.join(',')}));\n  //   }\n  // },[post])\n\n  if(!post) return null;\n  if(isLoading){\n    return (\n      <Paper elevation={6} className={classes.loadingPaper}>\n        <CircularProgress size=\"7em\"/>\n      </Paper>\n    )\n  }\n  \n  const recommendedPosts = posts.filter(({_id})=>_id!==post._id);\n  console.log('Posts',posts);\n  console.log('Post',post);\n  console.log('recommendedPost',recommendedPosts);\n  const openPost =(_id)=>history.push(`/posts/${_id}`);\n  return (\n    <Paper style={{padding: \"20px\", borderRadius: \"15px\"}} elevation={6}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" component=\"h2\">\n            {post?.title}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"h6\"\n            color=\"textSecondary\"\n            component=\"h2\"\n          >\n            {post.tags.map((tag) => `#${tag} `)}\n          </Typography>\n          <Typography gutterBottom variant=\"body1\" component=\"p\">\n            {post.message}\n          </Typography>\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\n          <Typography variant=\"body1\">\n            {moment(post.createdAt).fromNow()}\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n          <Typography variant=\"body1\">\n            <strong>Realtime Chat - coming soon!</strong>\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n          <Typography variant=\"body1\">\n            <strong>Comments - coming soon!</strong>\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n        </div>\n        <div className={classes.imageSection}>\n          <img\n            className={classes.media}\n            src={\n              post.selectedFile ||\n              \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n            }\n            alt={post.title}\n          />\n        </div>\n      </div>\n      {recommendedPosts.length ? (\n        <div className={classes.section}>\n          <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\n          <Divider/>\n          <div className={classes.recommendedPosts}>\n            {recommendedPosts.map(({title,message,name,likes,selectedFile,_id})=>(\n              <div style={{margin: '20px', cursor: \"pointer\"}} onClick={()=>openPost(_id)} key={_id}>\n                <Typography gutterBottom variant=\"h6\">{title}</Typography>\n                <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\n                <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\n                <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\n                <Typography gutterBottom variant=\"h6\">{title}</Typography>\n                <img src={selectedFile} width=\"200px\"/>\n              </div>\n\n            ))}\n          </div>\n        </div>\n      ):null}\n    </Paper>\n  );\n};\n\nexport default PostDetails;\n"]},"metadata":{},"sourceType":"module"}