{"ast":null,"code":"import { CREATE, DELETE, FETCH_ALL, LIKE, UPDATE } from \"../constants\";\nconst initialState = [];\nexport const postsReducer = function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //here post is our state\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case UPDATE:\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n};","map":{"version":3,"sources":["/Users/macbookair/Desktop/memory-mernStack-app/client/src/redux_store/reducers/postsReducer.js"],"names":["CREATE","DELETE","FETCH_ALL","LIKE","UPDATE","initialState","postsReducer","posts","action","type","payload","map","post","_id","filter"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,SAAzB,EAAoCC,IAApC,EAA0CC,MAA1C,QAAwD,cAAxD;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,OAAO,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC5D;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,SAAL;AACE,aAAOM,MAAM,CAACE,OAAd;;AACF,SAAKV,MAAL;AACE,aAAO,CAAC,GAAGO,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAKN,MAAL;AACA,SAAKD,IAAL;AACE,aAAOI,KAAK,CAACI,GAAN,CAAWC,IAAD,IACfA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAD9C,CAAP;;AAGF,SAAKX,MAAL;AACE,aAAOM,KAAK,CAACO,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA3C,CAAP;;AACF;AACE,aAAOH,KAAP;AAbJ;AAeD,CAjBM","sourcesContent":["import { CREATE, DELETE, FETCH_ALL, LIKE, UPDATE } from \"../constants\";\n\nconst initialState = [];\nexport const postsReducer = (posts = initialState, action) => {\n  //here post is our state\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n    case LIKE:\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}