{"ast":null,"code":"import { CREATE, DELETE, END_LOADING, FETCH_ALL, FETCH_BY_SEARCH, LIKE, START_LOADING, UPDATE } from \"../constants\";\nconst initialState = [];\nexport const postsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //here post is our state\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case CREATE:\n      return [...state, action.payload];\n\n    case UPDATE:\n    case LIKE:\n      return state.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return state.filter(post => post._id !== action.payload);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/macbookair/Desktop/memory-mernStack-app/client/src/redux_store/reducers/postsReducer.js"],"names":["CREATE","DELETE","END_LOADING","FETCH_ALL","FETCH_BY_SEARCH","LIKE","START_LOADING","UPDATE","initialState","postsReducer","state","action","type","isLoading","posts","payload","data","currentPage","numberOfPages","map","post","_id","filter"],"mappings":"AAAA,SACEA,MADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,eALF,EAMEC,IANF,EAOEC,aAPF,EAQEC,MARF,QASO,cATP;AAWA,MAAMC,YAAY,GAAG,EAArB;AACA,OAAO,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC5D;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYG,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKX,WAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYG,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKV,SAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELI,QAAAA,KAAK,EAAEH,MAAM,CAACI,OAAP,CAAeC,IAFjB;AAGLC,QAAAA,WAAW,EAAEN,MAAM,CAACI,OAAP,CAAeE,WAHvB;AAILC,QAAAA,aAAa,EAAEP,MAAM,CAACI,OAAP,CAAeG;AAJzB,OAAP;;AAMF,SAAKd,eAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYI,QAAAA,KAAK,EAAEH,MAAM,CAACI;AAA1B,OAAP;;AACF,SAAKf,MAAL;AACE,aAAO,CAAC,GAAGU,KAAJ,EAAWC,MAAM,CAACI,OAAlB,CAAP;;AACF,SAAKR,MAAL;AACA,SAAKF,IAAL;AACE,aAAOK,KAAK,CAACS,GAAN,CAAWC,IAAD,IACfA,IAAI,CAACC,GAAL,KAAaV,MAAM,CAACI,OAAP,CAAeM,GAA5B,GAAkCV,MAAM,CAACI,OAAzC,GAAmDK,IAD9C,CAAP;;AAGF,SAAKnB,MAAL;AACE,aAAOS,KAAK,CAACY,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaV,MAAM,CAACI,OAA3C,CAAP;;AACF;AACE,aAAOL,KAAP;AAxBJ;AA0BD,CA5BM","sourcesContent":["import {\n  CREATE,\n  DELETE,\n  END_LOADING,\n  FETCH_ALL,\n  FETCH_BY_SEARCH,\n  LIKE,\n  START_LOADING,\n  UPDATE,\n} from \"../constants\";\n\nconst initialState = [];\nexport const postsReducer = (state = initialState, action) => {\n  //here post is our state\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true };\n    case END_LOADING:\n      return { ...state, isLoading: false };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      };\n    case FETCH_BY_SEARCH:\n      return { ...state, posts: action.payload };\n    case CREATE:\n      return [...state, action.payload];\n    case UPDATE:\n    case LIKE:\n      return state.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case DELETE:\n      return state.filter((post) => post._id !== action.payload);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}