{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/Desktop/memory-mernStack-app/client/src/components/Form/Form.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, TextField, Paper, Button } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useStyles from \"./style\";\nimport { createPosts, updatePost } from \"../../redux_store/actions/posts\";\n\nconst Form = _ref => {\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n  const post = useSelector(state => currentId ? state.posts.find(post => post._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (post) {\n      setPostData(post);\n    }\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"postData\", postData);\n\n    if (currentId) {\n      console.log({\n        currentId\n      });\n      dispatch(updatePost(currentId, postData));\n      setPostData();\n    } else {\n      dispatch(createPosts(postData));\n    }\n\n    clear();\n  };\n\n  const handleChange = (e, prop) => {\n    setPostData({ ...postData,\n      [prop]: e.target.value\n    });\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\"\n    });\n  }; //   console.log({ postData });\n\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: `${classes.root} ${classes.form}`,\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, currentId ? \"Editing\" : \"Creating\", \" a Memory\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Creator\",\n    value: postData.creator,\n    onChange: e => handleChange(e, \"creator\"),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    value: postData.title,\n    onChange: e => handleChange(e, \"title\"),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    value: postData.message,\n    onChange: e => handleChange(e, \"message\"),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    value: postData.tags,\n    onChange: e => handleChange(e, \"tags\"),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref2 => {\n      let {\n        base64\n      } = _ref2;\n      return setPostData({ ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Delete\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/macbookair/Desktop/memory-mernStack-app/client/src/components/Form/Form.js"],"names":["React","useEffect","useState","Typography","TextField","Paper","Button","FileBase","useDispatch","useSelector","useStyles","createPosts","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","handleSubmit","e","preventDefault","console","log","clear","handleChange","prop","target","value","paper","root","form","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Typography, TextField, Paper, Button } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useStyles from \"./style\";\nimport { createPosts, updatePost } from \"../../redux_store/actions/posts\";\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((post) => post._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (post) {\n      setPostData(post);\n    }\n  }, [post]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"postData\", postData);\n    if (currentId) {\n      console.log({ currentId });\n      dispatch(updatePost(currentId, postData));\n      setPostData();\n    } else {\n      dispatch(createPosts(postData));\n    }\n    clear();\n  };\n  const handleChange = (e, prop) => {\n    setPostData({ ...postData, [prop]: e.target.value });\n  };\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n  //   console.log({ postData });\n  return (\n    <Paper className={classes.paper}>\n      <form\n        className={`${classes.root} ${classes.form}`}\n        autoComplete=\"off\"\n        noValidate\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? \"Editing\" : \"Creating\"} a Memory\n        </Typography>\n        <TextField\n          name=\"creator\"\n          variant=\"outlined\"\n          label=\"Creator\"\n          value={postData.creator}\n          onChange={(e) => handleChange(e, \"creator\")}\n          fullWidth\n        />\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          value={postData.title}\n          onChange={(e) => handleChange(e, \"title\")}\n          fullWidth\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          value={postData.message}\n          onChange={(e) => handleChange(e, \"message\")}\n          fullWidth\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags\"\n          value={postData.tags}\n          onChange={(e) => handleChange(e, \"tags\")}\n          fullWidth\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Delete\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}